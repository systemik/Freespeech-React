{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\n\nconst {\n  Events\n} = require('../../util/Constants');\n\nclass MessageCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n\n    if (channel) {\n      const existing = channel.messages.cache.get(data.id);\n      if (existing) return {\n        message: existing\n      };\n      const message = channel.messages.add(data);\n      const user = message.author;\n      let member = message.member;\n      channel.lastMessageID = data.id;\n\n      if (user) {\n        user.lastMessageID = data.id;\n        user.lastMessageChannelID = channel.id;\n      }\n\n      if (member) {\n        member.lastMessageID = data.id;\n        member.lastMessageChannelID = channel.id;\n      }\n      /**\n       * Emitted whenever a message is created.\n       * @event Client#message\n       * @param {Message} message The created message\n       */\n\n\n      client.emit(Events.MESSAGE_CREATE, message);\n      return {\n        message\n      };\n    }\n\n    return {};\n  }\n\n}\n\nmodule.exports = MessageCreateAction;","map":{"version":3,"sources":["/Users/macbookpro/node_modules/discord.js/src/client/actions/MessageCreate.js"],"names":["Action","require","Events","MessageCreateAction","handle","data","client","channel","channels","cache","get","channel_id","existing","messages","id","message","add","user","author","member","lastMessageID","lastMessageChannelID","emit","MESSAGE_CREATE","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,OAAO,CAAC,sBAAD,CAA1B;;AAEA,MAAME,mBAAN,SAAkCH,MAAlC,CAAyC;AACvCI,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,UAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,OAAO,GAAGD,MAAM,CAACE,QAAP,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0BL,IAAI,CAACM,UAA/B,CAAhB;;AACA,QAAIJ,OAAJ,EAAa;AACX,YAAMK,QAAQ,GAAGL,OAAO,CAACM,QAAR,CAAiBJ,KAAjB,CAAuBC,GAAvB,CAA2BL,IAAI,CAACS,EAAhC,CAAjB;AACA,UAAIF,QAAJ,EAAc,OAAO;AAAEG,QAAAA,OAAO,EAAEH;AAAX,OAAP;AACd,YAAMG,OAAO,GAAGR,OAAO,CAACM,QAAR,CAAiBG,GAAjB,CAAqBX,IAArB,CAAhB;AACA,YAAMY,IAAI,GAAGF,OAAO,CAACG,MAArB;AACA,UAAIC,MAAM,GAAGJ,OAAO,CAACI,MAArB;AACAZ,MAAAA,OAAO,CAACa,aAAR,GAAwBf,IAAI,CAACS,EAA7B;;AACA,UAAIG,IAAJ,EAAU;AACRA,QAAAA,IAAI,CAACG,aAAL,GAAqBf,IAAI,CAACS,EAA1B;AACAG,QAAAA,IAAI,CAACI,oBAAL,GAA4Bd,OAAO,CAACO,EAApC;AACD;;AACD,UAAIK,MAAJ,EAAY;AACVA,QAAAA,MAAM,CAACC,aAAP,GAAuBf,IAAI,CAACS,EAA5B;AACAK,QAAAA,MAAM,CAACE,oBAAP,GAA8Bd,OAAO,CAACO,EAAtC;AACD;AAED;AACN;AACA;AACA;AACA;;;AACMR,MAAAA,MAAM,CAACgB,IAAP,CAAYpB,MAAM,CAACqB,cAAnB,EAAmCR,OAAnC;AACA,aAAO;AAAEA,QAAAA;AAAF,OAAP;AACD;;AAED,WAAO,EAAP;AACD;;AA9BsC;;AAiCzCS,MAAM,CAACC,OAAP,GAAiBtB,mBAAjB","sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass MessageCreateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n    if (channel) {\n      const existing = channel.messages.cache.get(data.id);\n      if (existing) return { message: existing };\n      const message = channel.messages.add(data);\n      const user = message.author;\n      let member = message.member;\n      channel.lastMessageID = data.id;\n      if (user) {\n        user.lastMessageID = data.id;\n        user.lastMessageChannelID = channel.id;\n      }\n      if (member) {\n        member.lastMessageID = data.id;\n        member.lastMessageChannelID = channel.id;\n      }\n\n      /**\n       * Emitted whenever a message is created.\n       * @event Client#message\n       * @param {Message} message The created message\n       */\n      client.emit(Events.MESSAGE_CREATE, message);\n      return { message };\n    }\n\n    return {};\n  }\n}\n\nmodule.exports = MessageCreateAction;\n"]},"metadata":{},"sourceType":"script"}