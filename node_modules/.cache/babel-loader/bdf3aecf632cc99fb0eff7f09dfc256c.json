{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\n\nclass GuildEmojisUpdateAction extends Action {\n  handle(data) {\n    const guild = this.client.guilds.cache.get(data.guild_id);\n    if (!guild || !guild.emojis) return;\n    const deletions = new Map(guild.emojis.cache);\n\n    for (const emoji of data.emojis) {\n      // Determine type of emoji event\n      const cachedEmoji = guild.emojis.cache.get(emoji.id);\n\n      if (cachedEmoji) {\n        deletions.delete(emoji.id);\n\n        if (!cachedEmoji.equals(emoji)) {\n          // Emoji updated\n          this.client.actions.GuildEmojiUpdate.handle(cachedEmoji, emoji);\n        }\n      } else {\n        // Emoji added\n        this.client.actions.GuildEmojiCreate.handle(guild, emoji);\n      }\n    }\n\n    for (const emoji of deletions.values()) {\n      // Emoji deleted\n      this.client.actions.GuildEmojiDelete.handle(emoji);\n    }\n  }\n\n}\n\nmodule.exports = GuildEmojisUpdateAction;","map":{"version":3,"sources":["/Users/macbookpro/node_modules/discord.js/src/client/actions/GuildEmojisUpdate.js"],"names":["Action","require","GuildEmojisUpdateAction","handle","data","guild","client","guilds","cache","get","guild_id","emojis","deletions","Map","emoji","cachedEmoji","id","delete","equals","actions","GuildEmojiUpdate","GuildEmojiCreate","values","GuildEmojiDelete","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AAEA,MAAMC,uBAAN,SAAsCF,MAAtC,CAA6C;AAC3CG,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,UAAMC,KAAK,GAAG,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,KAAnB,CAAyBC,GAAzB,CAA6BL,IAAI,CAACM,QAAlC,CAAd;AACA,QAAI,CAACL,KAAD,IAAU,CAACA,KAAK,CAACM,MAArB,EAA6B;AAE7B,UAAMC,SAAS,GAAG,IAAIC,GAAJ,CAAQR,KAAK,CAACM,MAAN,CAAaH,KAArB,CAAlB;;AAEA,SAAK,MAAMM,KAAX,IAAoBV,IAAI,CAACO,MAAzB,EAAiC;AAC/B;AACA,YAAMI,WAAW,GAAGV,KAAK,CAACM,MAAN,CAAaH,KAAb,CAAmBC,GAAnB,CAAuBK,KAAK,CAACE,EAA7B,CAApB;;AACA,UAAID,WAAJ,EAAiB;AACfH,QAAAA,SAAS,CAACK,MAAV,CAAiBH,KAAK,CAACE,EAAvB;;AACA,YAAI,CAACD,WAAW,CAACG,MAAZ,CAAmBJ,KAAnB,CAAL,EAAgC;AAC9B;AACA,eAAKR,MAAL,CAAYa,OAAZ,CAAoBC,gBAApB,CAAqCjB,MAArC,CAA4CY,WAA5C,EAAyDD,KAAzD;AACD;AACF,OAND,MAMO;AACL;AACA,aAAKR,MAAL,CAAYa,OAAZ,CAAoBE,gBAApB,CAAqClB,MAArC,CAA4CE,KAA5C,EAAmDS,KAAnD;AACD;AACF;;AAED,SAAK,MAAMA,KAAX,IAAoBF,SAAS,CAACU,MAAV,EAApB,EAAwC;AACtC;AACA,WAAKhB,MAAL,CAAYa,OAAZ,CAAoBI,gBAApB,CAAqCpB,MAArC,CAA4CW,KAA5C;AACD;AACF;;AA1B0C;;AA6B7CU,MAAM,CAACC,OAAP,GAAiBvB,uBAAjB","sourcesContent":["'use strict';\n\nconst Action = require('./Action');\n\nclass GuildEmojisUpdateAction extends Action {\n  handle(data) {\n    const guild = this.client.guilds.cache.get(data.guild_id);\n    if (!guild || !guild.emojis) return;\n\n    const deletions = new Map(guild.emojis.cache);\n\n    for (const emoji of data.emojis) {\n      // Determine type of emoji event\n      const cachedEmoji = guild.emojis.cache.get(emoji.id);\n      if (cachedEmoji) {\n        deletions.delete(emoji.id);\n        if (!cachedEmoji.equals(emoji)) {\n          // Emoji updated\n          this.client.actions.GuildEmojiUpdate.handle(cachedEmoji, emoji);\n        }\n      } else {\n        // Emoji added\n        this.client.actions.GuildEmojiCreate.handle(guild, emoji);\n      }\n    }\n\n    for (const emoji of deletions.values()) {\n      // Emoji deleted\n      this.client.actions.GuildEmojiDelete.handle(emoji);\n    }\n  }\n}\n\nmodule.exports = GuildEmojisUpdateAction;\n"]},"metadata":{},"sourceType":"script"}