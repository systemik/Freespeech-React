{"ast":null,"code":"'use strict';\n\nconst Collection = require('./Collection.js');\n/**\n * A Collection which holds a max amount of entries. The first key is deleted if the Collection has\n * reached max size.\n * @extends {Collection}\n * @param {number} [maxSize=0] The maximum size of the Collection\n * @param {Iterable} [iterable=null] Optional entries passed to the Map constructor.\n * @private\n */\n\n\nclass LimitedCollection extends Collection {\n  constructor() {\n    let maxSize = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n    let iterable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    super(iterable);\n    /**\n     * The max size of the Collection.\n     * @type {number}\n     */\n\n    this.maxSize = maxSize;\n  }\n\n  set(key, value) {\n    if (this.maxSize === 0) return this;\n    if (this.size >= this.maxSize && !this.has(key)) this.delete(this.firstKey());\n    return super.set(key, value);\n  }\n\n  static get [Symbol.species]() {\n    return Collection;\n  }\n\n}\n\nmodule.exports = LimitedCollection;","map":{"version":3,"sources":["/Users/macbookpro/node_modules/discord.js/src/util/LimitedCollection.js"],"names":["Collection","require","LimitedCollection","constructor","maxSize","iterable","set","key","value","size","has","delete","firstKey","Symbol","species","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,iBAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMC,iBAAN,SAAgCF,UAAhC,CAA2C;AACzCG,EAAAA,WAAW,GAA+B;AAAA,QAA9BC,OAA8B,uEAApB,CAAoB;AAAA,QAAjBC,QAAiB,uEAAN,IAAM;AACxC,UAAMA,QAAN;AACA;AACJ;AACA;AACA;;AACI,SAAKD,OAAL,GAAeA,OAAf;AACD;;AAEDE,EAAAA,GAAG,CAACC,GAAD,EAAMC,KAAN,EAAa;AACd,QAAI,KAAKJ,OAAL,KAAiB,CAArB,EAAwB,OAAO,IAAP;AACxB,QAAI,KAAKK,IAAL,IAAa,KAAKL,OAAlB,IAA6B,CAAC,KAAKM,GAAL,CAASH,GAAT,CAAlC,EAAiD,KAAKI,MAAL,CAAY,KAAKC,QAAL,EAAZ;AACjD,WAAO,MAAMN,GAAN,CAAUC,GAAV,EAAeC,KAAf,CAAP;AACD;;AAEyB,cAAdK,MAAM,CAACC,OAAO,IAAI;AAC5B,WAAOd,UAAP;AACD;;AAlBwC;;AAqB3Ce,MAAM,CAACC,OAAP,GAAiBd,iBAAjB","sourcesContent":["'use strict';\n\nconst Collection = require('./Collection.js');\n\n/**\n * A Collection which holds a max amount of entries. The first key is deleted if the Collection has\n * reached max size.\n * @extends {Collection}\n * @param {number} [maxSize=0] The maximum size of the Collection\n * @param {Iterable} [iterable=null] Optional entries passed to the Map constructor.\n * @private\n */\nclass LimitedCollection extends Collection {\n  constructor(maxSize = 0, iterable = null) {\n    super(iterable);\n    /**\n     * The max size of the Collection.\n     * @type {number}\n     */\n    this.maxSize = maxSize;\n  }\n\n  set(key, value) {\n    if (this.maxSize === 0) return this;\n    if (this.size >= this.maxSize && !this.has(key)) this.delete(this.firstKey());\n    return super.set(key, value);\n  }\n\n  static get [Symbol.species]() {\n    return Collection;\n  }\n}\n\nmodule.exports = LimitedCollection;\n"]},"metadata":{},"sourceType":"script"}