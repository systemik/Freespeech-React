{"ast":null,"code":"'use strict';\n\nconst GuildChannel = require('./GuildChannel');\n/**\n * Represents a guild category channel on Discord.\n * @extends {GuildChannel}\n */\n\n\nclass CategoryChannel extends GuildChannel {\n  /**\n   * Channels that are a part of this category\n   * @type {Collection<Snowflake, GuildChannel>}\n   * @readonly\n   */\n  get children() {\n    return this.guild.channels.cache.filter(c => c.parentID === this.id);\n  }\n  /**\n   * Sets the category parent of this channel.\n   * <warn>It is not currently possible to set the parent of a CategoryChannel.</warn>\n   * @method setParent\n   * @memberof CategoryChannel\n   * @instance\n   * @param {?GuildChannel|Snowflake} channel Parent channel\n   * @param {Object} [options={}] Options to pass\n   * @param {boolean} [options.lockPermissions=true] Lock the permissions to what the parent's permissions are\n   * @param {string} [options.reason] Reason for modifying the parent of this channel\n   * @returns {Promise<GuildChannel>}\n   */\n\n\n}\n\nmodule.exports = CategoryChannel;","map":{"version":3,"sources":["/Users/macbookpro/node_modules/discord.js/src/structures/CategoryChannel.js"],"names":["GuildChannel","require","CategoryChannel","children","guild","channels","cache","filter","c","parentID","id","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,YAAY,GAAGC,OAAO,CAAC,gBAAD,CAA5B;AAEA;AACA;AACA;AACA;;;AACA,MAAMC,eAAN,SAA8BF,YAA9B,CAA2C;AACzC;AACF;AACA;AACA;AACA;AACc,MAARG,QAAQ,GAAG;AACb,WAAO,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,KAApB,CAA0BC,MAA1B,CAAiCC,CAAC,IAAIA,CAAC,CAACC,QAAF,KAAe,KAAKC,EAA1D,CAAP;AACD;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AArB2C;;AAwB3CC,MAAM,CAACC,OAAP,GAAiBV,eAAjB","sourcesContent":["'use strict';\n\nconst GuildChannel = require('./GuildChannel');\n\n/**\n * Represents a guild category channel on Discord.\n * @extends {GuildChannel}\n */\nclass CategoryChannel extends GuildChannel {\n  /**\n   * Channels that are a part of this category\n   * @type {Collection<Snowflake, GuildChannel>}\n   * @readonly\n   */\n  get children() {\n    return this.guild.channels.cache.filter(c => c.parentID === this.id);\n  }\n\n  /**\n   * Sets the category parent of this channel.\n   * <warn>It is not currently possible to set the parent of a CategoryChannel.</warn>\n   * @method setParent\n   * @memberof CategoryChannel\n   * @instance\n   * @param {?GuildChannel|Snowflake} channel Parent channel\n   * @param {Object} [options={}] Options to pass\n   * @param {boolean} [options.lockPermissions=true] Lock the permissions to what the parent's permissions are\n   * @param {string} [options.reason] Reason for modifying the parent of this channel\n   * @returns {Promise<GuildChannel>}\n   */\n}\n\nmodule.exports = CategoryChannel;\n"]},"metadata":{},"sourceType":"script"}