{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\n\nconst Collection = require('../../util/Collection');\n\nconst {\n  Events\n} = require('../../util/Constants');\n\nclass MessageDeleteBulkAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n\n    if (channel) {\n      const ids = data.ids;\n      const messages = new Collection();\n\n      for (const id of ids) {\n        const message = this.getMessage({\n          id,\n          guild_id: data.guild_id\n        }, channel, false);\n\n        if (message) {\n          message.deleted = true;\n          messages.set(message.id, message);\n          channel.messages.cache.delete(id);\n        }\n      }\n      /**\n       * Emitted whenever messages are deleted in bulk.\n       * @event Client#messageDeleteBulk\n       * @param {Collection<Snowflake, Message>} messages The deleted messages, mapped by their ID\n       */\n\n\n      if (messages.size > 0) client.emit(Events.MESSAGE_BULK_DELETE, messages);\n      return {\n        messages\n      };\n    }\n\n    return {};\n  }\n\n}\n\nmodule.exports = MessageDeleteBulkAction;","map":{"version":3,"sources":["/Users/macbookpro/node_modules/discord.js/src/client/actions/MessageDeleteBulk.js"],"names":["Action","require","Collection","Events","MessageDeleteBulkAction","handle","data","client","channel","channels","cache","get","channel_id","ids","messages","id","message","getMessage","guild_id","deleted","set","delete","size","emit","MESSAGE_BULK_DELETE","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAMC,UAAU,GAAGD,OAAO,CAAC,uBAAD,CAA1B;;AACA,MAAM;AAAEE,EAAAA;AAAF,IAAaF,OAAO,CAAC,sBAAD,CAA1B;;AAEA,MAAMG,uBAAN,SAAsCJ,MAAtC,CAA6C;AAC3CK,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,UAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,OAAO,GAAGD,MAAM,CAACE,QAAP,CAAgBC,KAAhB,CAAsBC,GAAtB,CAA0BL,IAAI,CAACM,UAA/B,CAAhB;;AAEA,QAAIJ,OAAJ,EAAa;AACX,YAAMK,GAAG,GAAGP,IAAI,CAACO,GAAjB;AACA,YAAMC,QAAQ,GAAG,IAAIZ,UAAJ,EAAjB;;AACA,WAAK,MAAMa,EAAX,IAAiBF,GAAjB,EAAsB;AACpB,cAAMG,OAAO,GAAG,KAAKC,UAAL,CACd;AACEF,UAAAA,EADF;AAEEG,UAAAA,QAAQ,EAAEZ,IAAI,CAACY;AAFjB,SADc,EAKdV,OALc,EAMd,KANc,CAAhB;;AAQA,YAAIQ,OAAJ,EAAa;AACXA,UAAAA,OAAO,CAACG,OAAR,GAAkB,IAAlB;AACAL,UAAAA,QAAQ,CAACM,GAAT,CAAaJ,OAAO,CAACD,EAArB,EAAyBC,OAAzB;AACAR,UAAAA,OAAO,CAACM,QAAR,CAAiBJ,KAAjB,CAAuBW,MAAvB,CAA8BN,EAA9B;AACD;AACF;AAED;AACN;AACA;AACA;AACA;;;AACM,UAAID,QAAQ,CAACQ,IAAT,GAAgB,CAApB,EAAuBf,MAAM,CAACgB,IAAP,CAAYpB,MAAM,CAACqB,mBAAnB,EAAwCV,QAAxC;AACvB,aAAO;AAAEA,QAAAA;AAAF,OAAP;AACD;;AACD,WAAO,EAAP;AACD;;AAjC0C;;AAoC7CW,MAAM,CAACC,OAAP,GAAiBtB,uBAAjB","sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst Collection = require('../../util/Collection');\nconst { Events } = require('../../util/Constants');\n\nclass MessageDeleteBulkAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = client.channels.cache.get(data.channel_id);\n\n    if (channel) {\n      const ids = data.ids;\n      const messages = new Collection();\n      for (const id of ids) {\n        const message = this.getMessage(\n          {\n            id,\n            guild_id: data.guild_id,\n          },\n          channel,\n          false,\n        );\n        if (message) {\n          message.deleted = true;\n          messages.set(message.id, message);\n          channel.messages.cache.delete(id);\n        }\n      }\n\n      /**\n       * Emitted whenever messages are deleted in bulk.\n       * @event Client#messageDeleteBulk\n       * @param {Collection<Snowflake, Message>} messages The deleted messages, mapped by their ID\n       */\n      if (messages.size > 0) client.emit(Events.MESSAGE_BULK_DELETE, messages);\n      return { messages };\n    }\n    return {};\n  }\n}\n\nmodule.exports = MessageDeleteBulkAction;\n"]},"metadata":{},"sourceType":"script"}