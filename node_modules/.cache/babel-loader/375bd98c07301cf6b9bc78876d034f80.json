{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\n\nconst {\n  Events\n} = require('../../util/Constants');\n\nclass GuildUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.id);\n\n    if (guild) {\n      const old = guild._update(data);\n      /**\n       * Emitted whenever a guild is updated - e.g. name change.\n       * @event Client#guildUpdate\n       * @param {Guild} oldGuild The guild before the update\n       * @param {Guild} newGuild The guild after the update\n       */\n\n\n      client.emit(Events.GUILD_UPDATE, old, guild);\n      return {\n        old,\n        updated: guild\n      };\n    }\n\n    return {\n      old: null,\n      updated: null\n    };\n  }\n\n}\n\nmodule.exports = GuildUpdateAction;","map":{"version":3,"sources":["/Users/macbookpro/node_modules/discord.js/src/client/actions/GuildUpdate.js"],"names":["Action","require","Events","GuildUpdateAction","handle","data","client","guild","guilds","cache","get","id","old","_update","emit","GUILD_UPDATE","updated","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,OAAO,CAAC,sBAAD,CAA1B;;AAEA,MAAME,iBAAN,SAAgCH,MAAhC,CAAuC;AACrCI,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,UAAMC,MAAM,GAAG,KAAKA,MAApB;AAEA,UAAMC,KAAK,GAAGD,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoBC,GAApB,CAAwBL,IAAI,CAACM,EAA7B,CAAd;;AACA,QAAIJ,KAAJ,EAAW;AACT,YAAMK,GAAG,GAAGL,KAAK,CAACM,OAAN,CAAcR,IAAd,CAAZ;AACA;AACN;AACA;AACA;AACA;AACA;;;AACMC,MAAAA,MAAM,CAACQ,IAAP,CAAYZ,MAAM,CAACa,YAAnB,EAAiCH,GAAjC,EAAsCL,KAAtC;AACA,aAAO;AACLK,QAAAA,GADK;AAELI,QAAAA,OAAO,EAAET;AAFJ,OAAP;AAID;;AAED,WAAO;AACLK,MAAAA,GAAG,EAAE,IADA;AAELI,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;;AAxBoC;;AA2BvCC,MAAM,CAACC,OAAP,GAAiBf,iBAAjB","sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildUpdateAction extends Action {\n  handle(data) {\n    const client = this.client;\n\n    const guild = client.guilds.cache.get(data.id);\n    if (guild) {\n      const old = guild._update(data);\n      /**\n       * Emitted whenever a guild is updated - e.g. name change.\n       * @event Client#guildUpdate\n       * @param {Guild} oldGuild The guild before the update\n       * @param {Guild} newGuild The guild after the update\n       */\n      client.emit(Events.GUILD_UPDATE, old, guild);\n      return {\n        old,\n        updated: guild,\n      };\n    }\n\n    return {\n      old: null,\n      updated: null,\n    };\n  }\n}\n\nmodule.exports = GuildUpdateAction;\n"]},"metadata":{},"sourceType":"script"}