{"ast":null,"code":"'use strict';\n\nconst BitField = require('./BitField');\n/**\n * Data structure that makes it easy to calculate intents.\n * @extends {BitField}\n */\n\n\nclass Intents extends BitField {}\n/**\n * @name Intents\n * @kind constructor\n * @memberof Intents\n * @param {IntentsResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Data that can be resolved to give a permission number. This can be:\n * * A string (see {@link Intents.FLAGS})\n * * An intents flag\n * * An instance of Intents\n * * An array of IntentsResolvable\n * @typedef {string|number|Intents|IntentsResolvable[]} IntentsResolvable\n */\n\n/**\n * Numeric websocket intents. All available properties:\n * * `GUILDS`\n * * `GUILD_MEMBERS`\n * * `GUILD_BANS`\n * * `GUILD_EMOJIS`\n * * `GUILD_INTEGRATIONS`\n * * `GUILD_WEBHOOKS`\n * * `GUILD_INVITES`\n * * `GUILD_VOICE_STATES`\n * * `GUILD_PRESENCES`\n * * `GUILD_MESSAGES`\n * * `GUILD_MESSAGE_REACTIONS`\n * * `GUILD_MESSAGE_TYPING`\n * * `DIRECT_MESSAGES`\n * * `DIRECT_MESSAGE_REACTIONS`\n * * `DIRECT_MESSAGE_TYPING`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/topics/gateway#list-of-intents}\n */\n\n\nIntents.FLAGS = {\n  GUILDS: 1 << 0,\n  GUILD_MEMBERS: 1 << 1,\n  GUILD_BANS: 1 << 2,\n  GUILD_EMOJIS: 1 << 3,\n  GUILD_INTEGRATIONS: 1 << 4,\n  GUILD_WEBHOOKS: 1 << 5,\n  GUILD_INVITES: 1 << 6,\n  GUILD_VOICE_STATES: 1 << 7,\n  GUILD_PRESENCES: 1 << 8,\n  GUILD_MESSAGES: 1 << 9,\n  GUILD_MESSAGE_REACTIONS: 1 << 10,\n  GUILD_MESSAGE_TYPING: 1 << 11,\n  DIRECT_MESSAGES: 1 << 12,\n  DIRECT_MESSAGE_REACTIONS: 1 << 13,\n  DIRECT_MESSAGE_TYPING: 1 << 14\n};\n/**\n * Bitfield representing all privileged intents\n * @type {number}\n * @see {@link https://discord.com/developers/docs/topics/gateway#privileged-intents}\n */\n\nIntents.PRIVILEGED = Intents.FLAGS.GUILD_MEMBERS | Intents.FLAGS.GUILD_PRESENCES;\n/**\n * Bitfield representing all intents combined\n * @type {number}\n */\n\nIntents.ALL = Object.values(Intents.FLAGS).reduce((acc, p) => acc | p, 0);\n/**\n * Bitfield representing all non-privileged intents\n * @type {number}\n */\n\nIntents.NON_PRIVILEGED = Intents.ALL & ~Intents.PRIVILEGED;\nmodule.exports = Intents;","map":{"version":3,"sources":["/Users/macbookpro/node_modules/discord.js/src/util/Intents.js"],"names":["BitField","require","Intents","FLAGS","GUILDS","GUILD_MEMBERS","GUILD_BANS","GUILD_EMOJIS","GUILD_INTEGRATIONS","GUILD_WEBHOOKS","GUILD_INVITES","GUILD_VOICE_STATES","GUILD_PRESENCES","GUILD_MESSAGES","GUILD_MESSAGE_REACTIONS","GUILD_MESSAGE_TYPING","DIRECT_MESSAGES","DIRECT_MESSAGE_REACTIONS","DIRECT_MESSAGE_TYPING","PRIVILEGED","ALL","Object","values","reduce","acc","p","NON_PRIVILEGED","module","exports"],"mappings":"AAAA;;AACA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,YAAD,CAAxB;AAEA;AACA;AACA;AACA;;;AACA,MAAMC,OAAN,SAAsBF,QAAtB,CAA+B;AAE/B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAE,OAAO,CAACC,KAAR,GAAgB;AACdC,EAAAA,MAAM,EAAE,KAAK,CADC;AAEdC,EAAAA,aAAa,EAAE,KAAK,CAFN;AAGdC,EAAAA,UAAU,EAAE,KAAK,CAHH;AAIdC,EAAAA,YAAY,EAAE,KAAK,CAJL;AAKdC,EAAAA,kBAAkB,EAAE,KAAK,CALX;AAMdC,EAAAA,cAAc,EAAE,KAAK,CANP;AAOdC,EAAAA,aAAa,EAAE,KAAK,CAPN;AAQdC,EAAAA,kBAAkB,EAAE,KAAK,CARX;AASdC,EAAAA,eAAe,EAAE,KAAK,CATR;AAUdC,EAAAA,cAAc,EAAE,KAAK,CAVP;AAWdC,EAAAA,uBAAuB,EAAE,KAAK,EAXhB;AAYdC,EAAAA,oBAAoB,EAAE,KAAK,EAZb;AAadC,EAAAA,eAAe,EAAE,KAAK,EAbR;AAcdC,EAAAA,wBAAwB,EAAE,KAAK,EAdjB;AAedC,EAAAA,qBAAqB,EAAE,KAAK;AAfd,CAAhB;AAkBA;AACA;AACA;AACA;AACA;;AACAhB,OAAO,CAACiB,UAAR,GAAqBjB,OAAO,CAACC,KAAR,CAAcE,aAAd,GAA8BH,OAAO,CAACC,KAAR,CAAcS,eAAjE;AAEA;AACA;AACA;AACA;;AACAV,OAAO,CAACkB,GAAR,GAAcC,MAAM,CAACC,MAAP,CAAcpB,OAAO,CAACC,KAAtB,EAA6BoB,MAA7B,CAAoC,CAACC,GAAD,EAAMC,CAAN,KAAYD,GAAG,GAAGC,CAAtD,EAAyD,CAAzD,CAAd;AAEA;AACA;AACA;AACA;;AACAvB,OAAO,CAACwB,cAAR,GAAyBxB,OAAO,CAACkB,GAAR,GAAc,CAAClB,OAAO,CAACiB,UAAhD;AAEAQ,MAAM,CAACC,OAAP,GAAiB1B,OAAjB","sourcesContent":["'use strict';\nconst BitField = require('./BitField');\n\n/**\n * Data structure that makes it easy to calculate intents.\n * @extends {BitField}\n */\nclass Intents extends BitField {}\n\n/**\n * @name Intents\n * @kind constructor\n * @memberof Intents\n * @param {IntentsResolvable} [bits=0] Bit(s) to read from\n */\n\n/**\n * Data that can be resolved to give a permission number. This can be:\n * * A string (see {@link Intents.FLAGS})\n * * An intents flag\n * * An instance of Intents\n * * An array of IntentsResolvable\n * @typedef {string|number|Intents|IntentsResolvable[]} IntentsResolvable\n */\n\n/**\n * Numeric websocket intents. All available properties:\n * * `GUILDS`\n * * `GUILD_MEMBERS`\n * * `GUILD_BANS`\n * * `GUILD_EMOJIS`\n * * `GUILD_INTEGRATIONS`\n * * `GUILD_WEBHOOKS`\n * * `GUILD_INVITES`\n * * `GUILD_VOICE_STATES`\n * * `GUILD_PRESENCES`\n * * `GUILD_MESSAGES`\n * * `GUILD_MESSAGE_REACTIONS`\n * * `GUILD_MESSAGE_TYPING`\n * * `DIRECT_MESSAGES`\n * * `DIRECT_MESSAGE_REACTIONS`\n * * `DIRECT_MESSAGE_TYPING`\n * @type {Object}\n * @see {@link https://discord.com/developers/docs/topics/gateway#list-of-intents}\n */\nIntents.FLAGS = {\n  GUILDS: 1 << 0,\n  GUILD_MEMBERS: 1 << 1,\n  GUILD_BANS: 1 << 2,\n  GUILD_EMOJIS: 1 << 3,\n  GUILD_INTEGRATIONS: 1 << 4,\n  GUILD_WEBHOOKS: 1 << 5,\n  GUILD_INVITES: 1 << 6,\n  GUILD_VOICE_STATES: 1 << 7,\n  GUILD_PRESENCES: 1 << 8,\n  GUILD_MESSAGES: 1 << 9,\n  GUILD_MESSAGE_REACTIONS: 1 << 10,\n  GUILD_MESSAGE_TYPING: 1 << 11,\n  DIRECT_MESSAGES: 1 << 12,\n  DIRECT_MESSAGE_REACTIONS: 1 << 13,\n  DIRECT_MESSAGE_TYPING: 1 << 14,\n};\n\n/**\n * Bitfield representing all privileged intents\n * @type {number}\n * @see {@link https://discord.com/developers/docs/topics/gateway#privileged-intents}\n */\nIntents.PRIVILEGED = Intents.FLAGS.GUILD_MEMBERS | Intents.FLAGS.GUILD_PRESENCES;\n\n/**\n * Bitfield representing all intents combined\n * @type {number}\n */\nIntents.ALL = Object.values(Intents.FLAGS).reduce((acc, p) => acc | p, 0);\n\n/**\n * Bitfield representing all non-privileged intents\n * @type {number}\n */\nIntents.NON_PRIVILEGED = Intents.ALL & ~Intents.PRIVILEGED;\n\nmodule.exports = Intents;\n"]},"metadata":{},"sourceType":"script"}