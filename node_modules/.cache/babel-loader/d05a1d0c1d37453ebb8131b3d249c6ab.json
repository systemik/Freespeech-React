{"ast":null,"code":"'use strict';\n\nconst BaseClient = require('./BaseClient');\n\nconst Webhook = require('../structures/Webhook');\n/**\n * The webhook client.\n * @implements {Webhook}\n * @extends {BaseClient}\n */\n\n\nclass WebhookClient extends BaseClient {\n  /**\n   * @param {Snowflake} id ID of the webhook\n   * @param {string} token Token of the webhook\n   * @param {ClientOptions} [options] Options for the client\n   * @example\n   * // Create a new webhook and send a message\n   * const hook = new Discord.WebhookClient('1234', 'abcdef');\n   * hook.send('This will send a message').catch(console.error);\n   */\n  constructor(id, token, options) {\n    super(options);\n    Object.defineProperty(this, 'client', {\n      value: this\n    });\n    this.id = id;\n    Object.defineProperty(this, 'token', {\n      value: token,\n      writable: true,\n      configurable: true\n    });\n  }\n\n}\n\nWebhook.applyToClass(WebhookClient);\nmodule.exports = WebhookClient;","map":{"version":3,"sources":["/Users/macbookpro/node_modules/discord.js/src/client/WebhookClient.js"],"names":["BaseClient","require","Webhook","WebhookClient","constructor","id","token","options","Object","defineProperty","value","writable","configurable","applyToClass","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAGC,OAAO,CAAC,cAAD,CAA1B;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,uBAAD,CAAvB;AAEA;AACA;AACA;AACA;AACA;;;AACA,MAAME,aAAN,SAA4BH,UAA5B,CAAuC;AACrC;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACEI,EAAAA,WAAW,CAACC,EAAD,EAAKC,KAAL,EAAYC,OAAZ,EAAqB;AAC9B,UAAMA,OAAN;AACAC,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,QAA5B,EAAsC;AAAEC,MAAAA,KAAK,EAAE;AAAT,KAAtC;AACA,SAAKL,EAAL,GAAUA,EAAV;AACAG,IAAAA,MAAM,CAACC,cAAP,CAAsB,IAAtB,EAA4B,OAA5B,EAAqC;AAAEC,MAAAA,KAAK,EAAEJ,KAAT;AAAgBK,MAAAA,QAAQ,EAAE,IAA1B;AAAgCC,MAAAA,YAAY,EAAE;AAA9C,KAArC;AACD;;AAfoC;;AAkBvCV,OAAO,CAACW,YAAR,CAAqBV,aAArB;AAEAW,MAAM,CAACC,OAAP,GAAiBZ,aAAjB","sourcesContent":["'use strict';\n\nconst BaseClient = require('./BaseClient');\nconst Webhook = require('../structures/Webhook');\n\n/**\n * The webhook client.\n * @implements {Webhook}\n * @extends {BaseClient}\n */\nclass WebhookClient extends BaseClient {\n  /**\n   * @param {Snowflake} id ID of the webhook\n   * @param {string} token Token of the webhook\n   * @param {ClientOptions} [options] Options for the client\n   * @example\n   * // Create a new webhook and send a message\n   * const hook = new Discord.WebhookClient('1234', 'abcdef');\n   * hook.send('This will send a message').catch(console.error);\n   */\n  constructor(id, token, options) {\n    super(options);\n    Object.defineProperty(this, 'client', { value: this });\n    this.id = id;\n    Object.defineProperty(this, 'token', { value: token, writable: true, configurable: true });\n  }\n}\n\nWebhook.applyToClass(WebhookClient);\n\nmodule.exports = WebhookClient;\n"]},"metadata":{},"sourceType":"script"}