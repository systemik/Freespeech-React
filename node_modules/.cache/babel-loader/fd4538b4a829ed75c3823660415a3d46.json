{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\n\nconst {\n  Events\n} = require('../../util/Constants');\n/*\n{ user_id: 'id',\n     message_id: 'id',\n     emoji: { name: '�', id: null },\n     channel_id: 'id',\n     guild_id: 'id' }\n*/\n\n\nclass MessageReactionRemove extends Action {\n  handle(data) {\n    if (!data.emoji) return false;\n    const user = this.getUser(data);\n    if (!user) return false; // Verify channel\n\n    const channel = this.getChannel(data);\n    if (!channel || channel.type === 'voice') return false; // Verify message\n\n    const message = this.getMessage(data, channel);\n    if (!message) return false; // Verify reaction\n\n    const reaction = this.getReaction(data, message, user);\n    if (!reaction) return false;\n\n    reaction._remove(user);\n    /**\n     * Emitted whenever a reaction is removed from a cached message.\n     * @event Client#messageReactionRemove\n     * @param {MessageReaction} messageReaction The reaction object\n     * @param {User} user The user whose emoji or reaction emoji was removed\n     */\n\n\n    this.client.emit(Events.MESSAGE_REACTION_REMOVE, reaction, user);\n    return {\n      message,\n      reaction,\n      user\n    };\n  }\n\n}\n\nmodule.exports = MessageReactionRemove;","map":{"version":3,"sources":["/Users/macbookpro/node_modules/discord.js/src/client/actions/MessageReactionRemove.js"],"names":["Action","require","Events","MessageReactionRemove","handle","data","emoji","user","getUser","channel","getChannel","type","message","getMessage","reaction","getReaction","_remove","client","emit","MESSAGE_REACTION_REMOVE","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,OAAO,CAAC,sBAAD,CAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,MAAME,qBAAN,SAAoCH,MAApC,CAA2C;AACzCI,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,QAAI,CAACA,IAAI,CAACC,KAAV,EAAiB,OAAO,KAAP;AAEjB,UAAMC,IAAI,GAAG,KAAKC,OAAL,CAAaH,IAAb,CAAb;AACA,QAAI,CAACE,IAAL,EAAW,OAAO,KAAP,CAJA,CAMX;;AACA,UAAME,OAAO,GAAG,KAAKC,UAAL,CAAgBL,IAAhB,CAAhB;AACA,QAAI,CAACI,OAAD,IAAYA,OAAO,CAACE,IAAR,KAAiB,OAAjC,EAA0C,OAAO,KAAP,CAR/B,CAUX;;AACA,UAAMC,OAAO,GAAG,KAAKC,UAAL,CAAgBR,IAAhB,EAAsBI,OAAtB,CAAhB;AACA,QAAI,CAACG,OAAL,EAAc,OAAO,KAAP,CAZH,CAcX;;AACA,UAAME,QAAQ,GAAG,KAAKC,WAAL,CAAiBV,IAAjB,EAAuBO,OAAvB,EAAgCL,IAAhC,CAAjB;AACA,QAAI,CAACO,QAAL,EAAe,OAAO,KAAP;;AACfA,IAAAA,QAAQ,CAACE,OAAT,CAAiBT,IAAjB;AACA;AACJ;AACA;AACA;AACA;AACA;;;AACI,SAAKU,MAAL,CAAYC,IAAZ,CAAiBhB,MAAM,CAACiB,uBAAxB,EAAiDL,QAAjD,EAA2DP,IAA3D;AAEA,WAAO;AAAEK,MAAAA,OAAF;AAAWE,MAAAA,QAAX;AAAqBP,MAAAA;AAArB,KAAP;AACD;;AA5BwC;;AA+B3Ca,MAAM,CAACC,OAAP,GAAiBlB,qBAAjB","sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\n/*\n{ user_id: 'id',\n     message_id: 'id',\n     emoji: { name: '�', id: null },\n     channel_id: 'id',\n     guild_id: 'id' }\n*/\n\nclass MessageReactionRemove extends Action {\n  handle(data) {\n    if (!data.emoji) return false;\n\n    const user = this.getUser(data);\n    if (!user) return false;\n\n    // Verify channel\n    const channel = this.getChannel(data);\n    if (!channel || channel.type === 'voice') return false;\n\n    // Verify message\n    const message = this.getMessage(data, channel);\n    if (!message) return false;\n\n    // Verify reaction\n    const reaction = this.getReaction(data, message, user);\n    if (!reaction) return false;\n    reaction._remove(user);\n    /**\n     * Emitted whenever a reaction is removed from a cached message.\n     * @event Client#messageReactionRemove\n     * @param {MessageReaction} messageReaction The reaction object\n     * @param {User} user The user whose emoji or reaction emoji was removed\n     */\n    this.client.emit(Events.MESSAGE_REACTION_REMOVE, reaction, user);\n\n    return { message, reaction, user };\n  }\n}\n\nmodule.exports = MessageReactionRemove;\n"]},"metadata":{},"sourceType":"script"}