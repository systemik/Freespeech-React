{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\n\nconst {\n  Events\n} = require('../../util/Constants');\n\nclass GuildRoleDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let role;\n\n    if (guild) {\n      role = guild.roles.cache.get(data.role_id);\n\n      if (role) {\n        guild.roles.cache.delete(data.role_id);\n        role.deleted = true;\n        /**\n         * Emitted whenever a guild role is deleted.\n         * @event Client#roleDelete\n         * @param {Role} role The role that was deleted\n         */\n\n        client.emit(Events.GUILD_ROLE_DELETE, role);\n      }\n    }\n\n    return {\n      role\n    };\n  }\n\n}\n\nmodule.exports = GuildRoleDeleteAction;","map":{"version":3,"sources":["/Users/macbookpro/node_modules/discord.js/src/client/actions/GuildRoleDelete.js"],"names":["Action","require","Events","GuildRoleDeleteAction","handle","data","client","guild","guilds","cache","get","guild_id","role","roles","role_id","delete","deleted","emit","GUILD_ROLE_DELETE","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,OAAO,CAAC,sBAAD,CAA1B;;AAEA,MAAME,qBAAN,SAAoCH,MAApC,CAA2C;AACzCI,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,UAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoBC,GAApB,CAAwBL,IAAI,CAACM,QAA7B,CAAd;AACA,QAAIC,IAAJ;;AAEA,QAAIL,KAAJ,EAAW;AACTK,MAAAA,IAAI,GAAGL,KAAK,CAACM,KAAN,CAAYJ,KAAZ,CAAkBC,GAAlB,CAAsBL,IAAI,CAACS,OAA3B,CAAP;;AACA,UAAIF,IAAJ,EAAU;AACRL,QAAAA,KAAK,CAACM,KAAN,CAAYJ,KAAZ,CAAkBM,MAAlB,CAAyBV,IAAI,CAACS,OAA9B;AACAF,QAAAA,IAAI,CAACI,OAAL,GAAe,IAAf;AACA;AACR;AACA;AACA;AACA;;AACQV,QAAAA,MAAM,CAACW,IAAP,CAAYf,MAAM,CAACgB,iBAAnB,EAAsCN,IAAtC;AACD;AACF;;AAED,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD;;AArBwC;;AAwB3CO,MAAM,CAACC,OAAP,GAAiBjB,qBAAjB","sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildRoleDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let role;\n\n    if (guild) {\n      role = guild.roles.cache.get(data.role_id);\n      if (role) {\n        guild.roles.cache.delete(data.role_id);\n        role.deleted = true;\n        /**\n         * Emitted whenever a guild role is deleted.\n         * @event Client#roleDelete\n         * @param {Role} role The role that was deleted\n         */\n        client.emit(Events.GUILD_ROLE_DELETE, role);\n      }\n    }\n\n    return { role };\n  }\n}\n\nmodule.exports = GuildRoleDeleteAction;\n"]},"metadata":{},"sourceType":"script"}