{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/freespeechreact/src/TileGrid.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useState } from 'react';\nimport Tile from './Tile.js';\nimport { tileGridData } from './tileGridData.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TileGrid(props) {\n  _s();\n\n  const currentTileNavigation = useState(tileGridData['home']);\n\n  function updateTileData(tileData) {\n    if (tileData.hasOwnProperty('navigation')) {\n      console.log(tileData['navigation']);\n    }\n  }\n\n  function getRandomTile() {\n    var names = ['bmo', 'finn', 'ice-king', 'jake', 'lumpy-space-princess', 'marceline', 'princess-bubblegum'];\n    var bools = [false, false, false, false, true];\n    var randName = names[Math.random() * names.length | 0];\n    var randFolder = bools[Math.random() * bools.length | 0];\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      name: randName.replace('-', ' '),\n      image: randName,\n      isFolder: randFolder,\n      func: this.updateTileData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 17\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tileGrid\",\n      children: currentTileNavigation[0].map(object => /*#__PURE__*/_jsxDEV(Tile, { ...object,\n        func: updateTileData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 57\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TileGrid, \"vyueZPwJXD6guWqTNZ7XdJvhk80=\");\n\n_c = TileGrid;\nexport default TileGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"TileGrid\");","map":{"version":3,"sources":["/Users/macbookpro/Desktop/freespeechreact/src/TileGrid.js"],"names":["React","Component","useState","Tile","tileGridData","TileGrid","props","currentTileNavigation","updateTileData","tileData","hasOwnProperty","console","log","getRandomTile","names","bools","randName","Math","random","length","randFolder","replace","map","object"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,YAAT,QAA6B,mBAA7B;;;AAGA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAMC,qBAAqB,GAAGL,QAAQ,CAACE,YAAY,CAAC,MAAD,CAAb,CAAtC;;AAEA,WAASI,cAAT,CAAwBC,QAAxB,EAAkC;AAC9B,QAAGA,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAH,EAA0C;AACtCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAAC,YAAD,CAApB;AACH;AACJ;;AAED,WAASI,aAAT,GAAyB;AACrB,QAAIC,KAAK,GAAG,CAAC,KAAD,EAAO,MAAP,EAAc,UAAd,EAAyB,MAAzB,EAAgC,sBAAhC,EAAuD,WAAvD,EAAmE,oBAAnE,CAAZ;AACA,QAAIC,KAAK,GAAG,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,IAAzB,CAAZ;AACA,QAAIC,QAAQ,GAAGF,KAAK,CAAEG,IAAI,CAACC,MAAL,KAAgBJ,KAAK,CAACK,MAAvB,GAAiC,CAAlC,CAApB;AACA,QAAIC,UAAU,GAAGL,KAAK,CAAEE,IAAI,CAACC,MAAL,KAAgBH,KAAK,CAACI,MAAvB,GAAiC,CAAlC,CAAtB;AACA,wBAAQ,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEH,QAAQ,CAACK,OAAT,CAAiB,GAAjB,EAAqB,GAArB,CAAZ;AAAuC,MAAA,KAAK,EAAEL,QAA9C;AAAwD,MAAA,QAAQ,EAAEI,UAAlE;AAA8E,MAAA,IAAI,EAAE,KAAKZ;AAAzF;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;;AAED,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,gBACKD,qBAAqB,CAAC,CAAD,CAArB,CAAyBe,GAAzB,CAA6BC,MAAM,iBAAI,QAAC,IAAD,OAAUA,MAAV;AAAkB,QAAA,IAAI,EAAEf;AAAxB;AAAA;AAAA;AAAA;AAAA,cAAvC;AADL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA1BQH,Q;;KAAAA,Q;AA4BT,eAAeA,QAAf","sourcesContent":["import React, { Component, useState } from 'react'\nimport Tile from './Tile.js';\nimport { tileGridData } from './tileGridData.js';\n\n\nfunction TileGrid(props) {\n\n    const currentTileNavigation = useState(tileGridData['home']);\n\n    function updateTileData(tileData) {\n        if(tileData.hasOwnProperty('navigation')) {\n            console.log(tileData['navigation'])\n        }\n    }\n\n    function getRandomTile() {\n        var names = ['bmo','finn','ice-king','jake','lumpy-space-princess','marceline','princess-bubblegum'];\n        var bools = [false,false,false,false,true];\n        var randName = names[(Math.random() * names.length) | 0]\n        var randFolder = bools[(Math.random() * bools.length) | 0]\n        return (<Tile name={randName.replace('-',' ')} image={randName} isFolder={randFolder} func={this.updateTileData} />)\n    }\n\n    return (\n        <div>\n            <div className='tileGrid'>\n                {currentTileNavigation[0].map(object => <Tile {...object} func={updateTileData} />) }\n            </div>\n        </div>\n        \n    )\n}\n\nexport default TileGrid;\n"]},"metadata":{},"sourceType":"module"}