{"ast":null,"code":"'use strict';\n\nconst https = require('https');\n\nconst FormData = require('@discordjs/form-data');\n\nconst AbortController = require('abort-controller');\n\nconst fetch = require('node-fetch');\n\nconst {\n  browser,\n  UserAgent\n} = require('../util/Constants');\n\nif (https.Agent) var agent = new https.Agent({\n  keepAlive: true\n});\n\nclass APIRequest {\n  constructor(rest, method, path, options) {\n    this.rest = rest;\n    this.client = rest.client;\n    this.method = method;\n    this.route = options.route;\n    this.options = options;\n    this.retries = 0;\n    let queryString = '';\n\n    if (options.query) {\n      const query = Object.entries(options.query).filter(_ref => {\n        let [, value] = _ref;\n        return ![null, 'null', 'undefined'].includes(value) && typeof value !== 'undefined';\n      }).flatMap(_ref2 => {\n        let [key, value] = _ref2;\n        return Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]];\n      });\n      queryString = new URLSearchParams(query).toString();\n    }\n\n    this.path = `${path}${queryString && `?${queryString}`}`;\n  }\n\n  make() {\n    const API = this.options.versioned === false ? this.client.options.http.api : `${this.client.options.http.api}/v${this.client.options.http.version}`;\n    const url = API + this.path;\n    let headers = {};\n    if (this.options.auth !== false) headers.Authorization = this.rest.getAuth();\n    if (this.options.reason) headers['X-Audit-Log-Reason'] = encodeURIComponent(this.options.reason);\n    if (!browser) headers['User-Agent'] = UserAgent;\n    if (this.options.headers) headers = Object.assign(headers, this.options.headers);\n    let body;\n\n    if (this.options.files && this.options.files.length) {\n      body = new FormData();\n\n      for (const file of this.options.files) if (file && file.file) body.append(file.name, file.file, file.name);\n\n      if (typeof this.options.data !== 'undefined') body.append('payload_json', JSON.stringify(this.options.data));\n      if (!browser) headers = Object.assign(headers, body.getHeaders()); // eslint-disable-next-line eqeqeq\n    } else if (this.options.data != null) {\n      body = JSON.stringify(this.options.data);\n      headers['Content-Type'] = 'application/json';\n    }\n\n    const controller = new AbortController();\n    const timeout = this.client.setTimeout(() => controller.abort(), this.client.options.restRequestTimeout);\n    return fetch(url, {\n      method: this.method,\n      headers,\n      agent,\n      body,\n      signal: controller.signal\n    }).finally(() => this.client.clearTimeout(timeout));\n  }\n\n}\n\nmodule.exports = APIRequest;","map":{"version":3,"sources":["/Users/macbookpro/node_modules/discord.js/src/rest/APIRequest.js"],"names":["https","require","FormData","AbortController","fetch","browser","UserAgent","Agent","agent","keepAlive","APIRequest","constructor","rest","method","path","options","client","route","retries","queryString","query","Object","entries","filter","value","includes","flatMap","key","Array","isArray","map","v","URLSearchParams","toString","make","API","versioned","http","api","version","url","headers","auth","Authorization","getAuth","reason","encodeURIComponent","assign","body","files","length","file","append","name","data","JSON","stringify","getHeaders","controller","timeout","setTimeout","abort","restRequestTimeout","signal","finally","clearTimeout","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nconst https = require('https');\nconst FormData = require('@discordjs/form-data');\nconst AbortController = require('abort-controller');\nconst fetch = require('node-fetch');\nconst { browser, UserAgent } = require('../util/Constants');\n\nif (https.Agent) var agent = new https.Agent({ keepAlive: true });\n\nclass APIRequest {\n  constructor(rest, method, path, options) {\n    this.rest = rest;\n    this.client = rest.client;\n    this.method = method;\n    this.route = options.route;\n    this.options = options;\n    this.retries = 0;\n\n    let queryString = '';\n    if (options.query) {\n      const query = Object.entries(options.query)\n        .filter(([, value]) => ![null, 'null', 'undefined'].includes(value) && typeof value !== 'undefined')\n        .flatMap(([key, value]) => (Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]));\n      queryString = new URLSearchParams(query).toString();\n    }\n    this.path = `${path}${queryString && `?${queryString}`}`;\n  }\n\n  make() {\n    const API =\n      this.options.versioned === false\n        ? this.client.options.http.api\n        : `${this.client.options.http.api}/v${this.client.options.http.version}`;\n    const url = API + this.path;\n    let headers = {};\n\n    if (this.options.auth !== false) headers.Authorization = this.rest.getAuth();\n    if (this.options.reason) headers['X-Audit-Log-Reason'] = encodeURIComponent(this.options.reason);\n    if (!browser) headers['User-Agent'] = UserAgent;\n    if (this.options.headers) headers = Object.assign(headers, this.options.headers);\n\n    let body;\n    if (this.options.files && this.options.files.length) {\n      body = new FormData();\n      for (const file of this.options.files) if (file && file.file) body.append(file.name, file.file, file.name);\n      if (typeof this.options.data !== 'undefined') body.append('payload_json', JSON.stringify(this.options.data));\n      if (!browser) headers = Object.assign(headers, body.getHeaders());\n      // eslint-disable-next-line eqeqeq\n    } else if (this.options.data != null) {\n      body = JSON.stringify(this.options.data);\n      headers['Content-Type'] = 'application/json';\n    }\n\n    const controller = new AbortController();\n    const timeout = this.client.setTimeout(() => controller.abort(), this.client.options.restRequestTimeout);\n    return fetch(url, {\n      method: this.method,\n      headers,\n      agent,\n      body,\n      signal: controller.signal,\n    }).finally(() => this.client.clearTimeout(timeout));\n  }\n}\n\nmodule.exports = APIRequest;\n"]},"metadata":{},"sourceType":"script"}