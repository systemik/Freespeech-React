{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\n\nconst {\n  Events\n} = require('../../util/Constants');\n\nclass MessageDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel(data);\n    let message;\n\n    if (channel) {\n      message = this.getMessage(data, channel);\n\n      if (message) {\n        channel.messages.cache.delete(message.id);\n        message.deleted = true;\n        /**\n         * Emitted whenever a message is deleted.\n         * @event Client#messageDelete\n         * @param {Message} message The deleted message\n         */\n\n        client.emit(Events.MESSAGE_DELETE, message);\n      }\n    }\n\n    return {\n      message\n    };\n  }\n\n}\n\nmodule.exports = MessageDeleteAction;","map":{"version":3,"sources":["/Users/macbookpro/node_modules/discord.js/src/client/actions/MessageDelete.js"],"names":["Action","require","Events","MessageDeleteAction","handle","data","client","channel","getChannel","message","getMessage","messages","cache","delete","id","deleted","emit","MESSAGE_DELETE","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,OAAO,CAAC,sBAAD,CAA1B;;AAEA,MAAME,mBAAN,SAAkCH,MAAlC,CAAyC;AACvCI,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,UAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,OAAO,GAAG,KAAKC,UAAL,CAAgBH,IAAhB,CAAhB;AACA,QAAII,OAAJ;;AACA,QAAIF,OAAJ,EAAa;AACXE,MAAAA,OAAO,GAAG,KAAKC,UAAL,CAAgBL,IAAhB,EAAsBE,OAAtB,CAAV;;AACA,UAAIE,OAAJ,EAAa;AACXF,QAAAA,OAAO,CAACI,QAAR,CAAiBC,KAAjB,CAAuBC,MAAvB,CAA8BJ,OAAO,CAACK,EAAtC;AACAL,QAAAA,OAAO,CAACM,OAAR,GAAkB,IAAlB;AACA;AACR;AACA;AACA;AACA;;AACQT,QAAAA,MAAM,CAACU,IAAP,CAAYd,MAAM,CAACe,cAAnB,EAAmCR,OAAnC;AACD;AACF;;AAED,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD;;AApBsC;;AAuBzCS,MAAM,CAACC,OAAP,GAAiBhB,mBAAjB","sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass MessageDeleteAction extends Action {\n  handle(data) {\n    const client = this.client;\n    const channel = this.getChannel(data);\n    let message;\n    if (channel) {\n      message = this.getMessage(data, channel);\n      if (message) {\n        channel.messages.cache.delete(message.id);\n        message.deleted = true;\n        /**\n         * Emitted whenever a message is deleted.\n         * @event Client#messageDelete\n         * @param {Message} message The deleted message\n         */\n        client.emit(Events.MESSAGE_DELETE, message);\n      }\n    }\n\n    return { message };\n  }\n}\n\nmodule.exports = MessageDeleteAction;\n"]},"metadata":{},"sourceType":"script"}