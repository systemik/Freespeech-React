{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/freespeechreact/src/TileGrid.js\";\nimport React, { Component } from 'react';\nimport Tile from './Tile.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class TileGrid extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      count: 0\n    };\n\n    this.test = () => console.log('test');\n  }\n\n  updateTileData(name) {\n    console.log(name);\n  }\n\n  getRandomTile() {\n    var names = ['bmo', 'finn', 'ice-king', 'jake', 'lumpy-space-princess', 'marceline', 'princess-bubblegum'];\n    var bools = [false, false, false, false, true];\n    var randName = names[Math.random() * names.length | 0];\n    var randFolder = bools[Math.random() * bools.length | 0];\n    return /*#__PURE__*/_jsxDEV(Tile, {\n      name: randName.replace('-', ' '),\n      image: randName,\n      isFolder: randFolder,\n      func: this.updateTileData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tileGrid\",\n        children: Array(13 * 4).fill(null).map((value, index) => this.getRandomTile())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/macbookpro/Desktop/freespeechreact/src/TileGrid.js"],"names":["React","Component","Tile","TileGrid","constructor","props","state","count","test","console","log","updateTileData","name","getRandomTile","names","bools","randName","Math","random","length","randFolder","replace","render","Array","fill","map","value","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,eAAe,MAAMC,QAAN,SAAuBF,SAAvB,CAAiC;AAC5CG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;;AAIA,SAAKC,IAAL,GAAY,MAAMC,OAAO,CAACC,GAAR,CAAY,MAAZ,CAAlB;AACH;;AAEDC,EAAAA,cAAc,CAACC,IAAD,EAAO;AACjBH,IAAAA,OAAO,CAACC,GAAR,CAAYE,IAAZ;AACH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,QAAIC,KAAK,GAAG,CAAC,KAAD,EAAO,MAAP,EAAc,UAAd,EAAyB,MAAzB,EAAgC,sBAAhC,EAAuD,WAAvD,EAAmE,oBAAnE,CAAZ;AACA,QAAIC,KAAK,GAAG,CAAC,KAAD,EAAO,KAAP,EAAa,KAAb,EAAmB,KAAnB,EAAyB,IAAzB,CAAZ;AACA,QAAIC,QAAQ,GAAGF,KAAK,CAAEG,IAAI,CAACC,MAAL,KAAgBJ,KAAK,CAACK,MAAvB,GAAiC,CAAlC,CAApB;AACA,QAAIC,UAAU,GAAGL,KAAK,CAAEE,IAAI,CAACC,MAAL,KAAgBH,KAAK,CAACI,MAAvB,GAAiC,CAAlC,CAAtB;AACA,wBAAQ,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEH,QAAQ,CAACK,OAAT,CAAiB,GAAjB,EAAqB,GAArB,CAAZ;AAAuC,MAAA,KAAK,EAAEL,QAA9C;AAAwD,MAAA,QAAQ,EAAEI,UAAlE;AAA8E,MAAA,IAAI,EAAE,KAAKT;AAAzF;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;;AAGDW,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,kBACCC,KAAK,CAAC,KAAG,CAAJ,CAAL,CAAYC,IAAZ,CAAiB,IAAjB,EAAuBC,GAAvB,CAA2B,CAACC,KAAD,EAAQC,KAAR,KACxB,KAAKd,aAAL,EADH;AADD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AAlC2C","sourcesContent":["import React, { Component } from 'react'\nimport Tile from './Tile.js';\n\nexport default class TileGrid extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n          count: 0,\n        };\n\n        this.test = () => console.log('test');\n    }\n\n    updateTileData(name) {\n        console.log(name);\n    }\n\n    getRandomTile() {\n        var names = ['bmo','finn','ice-king','jake','lumpy-space-princess','marceline','princess-bubblegum'];\n        var bools = [false,false,false,false,true];\n        var randName = names[(Math.random() * names.length) | 0]\n        var randFolder = bools[(Math.random() * bools.length) | 0]\n        return (<Tile name={randName.replace('-',' ')} image={randName} isFolder={randFolder} func={this.updateTileData} />)\n    }\n\n\n    render() {\n        return (\n            <div>\n                <div className='tileGrid'>\n                {Array(13*4).fill(null).map((value, index) => (\n                    this.getRandomTile()\n                ))}\n                </div>\n            </div>\n            \n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}