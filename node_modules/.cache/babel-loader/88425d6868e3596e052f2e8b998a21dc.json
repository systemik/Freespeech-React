{"ast":null,"code":"'use strict';\n\nconst Action = require('./Action');\n\nconst {\n  Events\n} = require('../../util/Constants');\n\nclass GuildRoleCreate extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let role;\n\n    if (guild) {\n      const already = guild.roles.cache.has(data.role.id);\n      role = guild.roles.add(data.role);\n      /**\n       * Emitted whenever a role is created.\n       * @event Client#roleCreate\n       * @param {Role} role The role that was created\n       */\n\n      if (!already) client.emit(Events.GUILD_ROLE_CREATE, role);\n    }\n\n    return {\n      role\n    };\n  }\n\n}\n\nmodule.exports = GuildRoleCreate;","map":{"version":3,"sources":["/Users/macbookpro/node_modules/discord.js/src/client/actions/GuildRoleCreate.js"],"names":["Action","require","Events","GuildRoleCreate","handle","data","client","guild","guilds","cache","get","guild_id","role","already","roles","has","id","add","emit","GUILD_ROLE_CREATE","module","exports"],"mappings":"AAAA;;AAEA,MAAMA,MAAM,GAAGC,OAAO,CAAC,UAAD,CAAtB;;AACA,MAAM;AAAEC,EAAAA;AAAF,IAAaD,OAAO,CAAC,sBAAD,CAA1B;;AAEA,MAAME,eAAN,SAA8BH,MAA9B,CAAqC;AACnCI,EAAAA,MAAM,CAACC,IAAD,EAAO;AACX,UAAMC,MAAM,GAAG,KAAKA,MAApB;AACA,UAAMC,KAAK,GAAGD,MAAM,CAACE,MAAP,CAAcC,KAAd,CAAoBC,GAApB,CAAwBL,IAAI,CAACM,QAA7B,CAAd;AACA,QAAIC,IAAJ;;AACA,QAAIL,KAAJ,EAAW;AACT,YAAMM,OAAO,GAAGN,KAAK,CAACO,KAAN,CAAYL,KAAZ,CAAkBM,GAAlB,CAAsBV,IAAI,CAACO,IAAL,CAAUI,EAAhC,CAAhB;AACAJ,MAAAA,IAAI,GAAGL,KAAK,CAACO,KAAN,CAAYG,GAAZ,CAAgBZ,IAAI,CAACO,IAArB,CAAP;AACA;AACN;AACA;AACA;AACA;;AACM,UAAI,CAACC,OAAL,EAAcP,MAAM,CAACY,IAAP,CAAYhB,MAAM,CAACiB,iBAAnB,EAAsCP,IAAtC;AACf;;AACD,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD;;AAhBkC;;AAmBrCQ,MAAM,CAACC,OAAP,GAAiBlB,eAAjB","sourcesContent":["'use strict';\n\nconst Action = require('./Action');\nconst { Events } = require('../../util/Constants');\n\nclass GuildRoleCreate extends Action {\n  handle(data) {\n    const client = this.client;\n    const guild = client.guilds.cache.get(data.guild_id);\n    let role;\n    if (guild) {\n      const already = guild.roles.cache.has(data.role.id);\n      role = guild.roles.add(data.role);\n      /**\n       * Emitted whenever a role is created.\n       * @event Client#roleCreate\n       * @param {Role} role The role that was created\n       */\n      if (!already) client.emit(Events.GUILD_ROLE_CREATE, role);\n    }\n    return { role };\n  }\n}\n\nmodule.exports = GuildRoleCreate;\n"]},"metadata":{},"sourceType":"script"}