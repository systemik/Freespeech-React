{"ast":null,"code":"var _jsxFileName = \"/Users/macbookpro/Desktop/freespeechreact/src/Tile.js\";\nimport React from 'react';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport './Tile.css';\nimport birdhouse from './images/birdhouse.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Tile = props => {\n  const isFolder = props.isFolder;\n  let icon;\n\n  if (isFolder) {\n    icon = /*#__PURE__*/_jsxDEV(\"div\", {\n      classname: \"tileOverlap\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"tileIconOverlap\",\n        src: 'https://img.icons8.com/fluency/96/000000/' + props.image + '.png',\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"tileFolderOverlap\",\n        src: \"https://img.icons8.com/fluency/96/000000/folder.png\",\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  } else {\n    icon = /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"tileIcon\",\n      src: 'https://img.icons8.com/fluency/96/000000/' + props.image + '.png',\n      alt: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Tile\",\n    children: /*#__PURE__*/_jsxDEV(ButtonBase, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tileContent\",\n        children: [icon, /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.name || 'Untitled'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Tile;\nexport default Tile;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tile\");","map":{"version":3,"sources":["/Users/macbookpro/Desktop/freespeechreact/src/Tile.js"],"names":["React","ButtonBase","birdhouse","Tile","props","isFolder","icon","image","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAO,YAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;;AAEA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,QAAMC,QAAQ,GAAGD,KAAK,CAACC,QAAvB;AACA,MAAIC,IAAJ;;AAEA,MAAGD,QAAH,EAAa;AACTC,IAAAA,IAAI,gBAAG;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACK;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAiC,QAAA,GAAG,EAAE,8CAA4CF,KAAK,CAACG,KAAlD,GAAwD,MAA9F;AAAsG,QAAA,GAAG,EAAC;AAA1G;AAAA;AAAA;AAAA;AAAA,cADL,eAEK;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAmC,QAAA,GAAG,EAAC,qDAAvC;AAA6F,QAAA,GAAG,EAAC;AAAjG;AAAA;AAAA;AAAA;AAAA,cAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAIH,GALD,MAKO;AACHD,IAAAA,IAAI,gBAAG;AAAK,MAAA,SAAS,EAAC,UAAf;AAA0B,MAAA,GAAG,EAAE,8CAA4CF,KAAK,CAACG,KAAlD,GAAwD,MAAvF;AAA+F,MAAA,GAAG,EAAC;AAAnG;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACI,QAAC,UAAD;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,mBAEKD,IAFL,eAII;AAAA,oBAAIF,KAAK,CAACI,IAAN,IAAc;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAzBD;;KAAML,I;AA2BN,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport ButtonBase from '@mui/material/ButtonBase';\nimport './Tile.css';\nimport birdhouse from './images/birdhouse.png';\n\nconst Tile = (props) => {\n    const isFolder = props.isFolder;\n    let icon;\n\n    if(isFolder) {\n        icon = <div classname='tileOverlap'>\n                    <img className='tileIconOverlap' src={'https://img.icons8.com/fluency/96/000000/'+props.image+'.png'} alt='' />\n                    <img className='tileFolderOverlap' src='https://img.icons8.com/fluency/96/000000/folder.png' alt='' />\n                </div>;\n    } else {\n        icon = <img className='tileIcon' src={'https://img.icons8.com/fluency/96/000000/'+props.image+'.png'} alt='' />;\n    }\n\n    return(\n        <div className=\"Tile\">\n            <ButtonBase>\n                <div className='tileContent'>\n\n                    {icon}\n\n                    <p>{props.name || 'Untitled'}</p>\n                </div>\n            </ButtonBase>\n        </div>\n    );\n}\n\nexport default Tile;"]},"metadata":{},"sourceType":"module"}